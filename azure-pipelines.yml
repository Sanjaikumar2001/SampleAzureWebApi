trigger:
- main  # Or your branch name

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'

steps:

# Restore NuGet packages
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '8.x.x'
    installationPath: $(Agent.ToolsDirectory)/dotnet

- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

# Build the project
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

# Publish to folder
- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'

# Zip the published folder
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/webapp.zip'
    replaceExistingArchive: true

# Publish build artifact
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/webapp.zip'
    ArtifactName: 'drop'
    publishLocation: 'Container'

# Deploy to Azure App Service
- task: AzureWebApp@1
  inputs:
    azureSubscription: 'SampleAzureAPI'
    appType: 'webApp'
    appName: 'samplewebapi2025'
    package: '$(Build.ArtifactStagingDirectory)/webapp.zip'
